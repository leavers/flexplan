[project]
name = "flexplan"
version = "0.0.1"
description = ""
authors = [
    {name = "Leavers", email = "leavers930@gmail.com"},
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "autoflake>=2.2.1",
    "mypy>=1.6.1",
    "typing-extensions>=4.8.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "autoflake>=2.2.1",
    "bumpver>=2023.1129",
    "mypy>=1.0.1",
    "pytest>=7.2.1",
    "pytest-asyncio>=0.20.3",
    "pytest-timeout>=2.1.0",
    "nox>=2022.11.21",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
]

[tool.pdm.scripts]
autoflake_ = "autoflake flexplan tests noxfile.py"
autoflake_check = "autoflake --check flexplan tests noxfile.py"
format = {composite = ["autoflake_", "ruff_format"]}
format_check = {composite = ["autoflake_check", "ruff_format_check"]}
lint = {composite = ["flake_", "mypy_"]}
mypy_ = "mypy flexplan tests noxfile.py"
pytest_ = "pytest tests"
ruff_lint = "ruff check ."
ruff_format = "ruff format ."
ruff_format_check = "ruff format --check ."
test = {composite = ["pytest_"]}

[tool.pdm.build]
excludes = ["tests"]

[tool.autoflake]
in-place = true
recursive = true
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.black]
line-length = 88

[tool.coverage.run]
branch = true
source = ["flexplan"]
parallel = true

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: nocover"]

[tool.ruff]
line-length = 88

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
# use comment "type: ignore" to ignore single line
# use comment "type: ignore[error-code] to ignore single error"

[tool.pytest.ini_options]
asyncio_mode = "strict"
